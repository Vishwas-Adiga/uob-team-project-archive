import {
  CreationOptional,
  DataTypes,
  InferAttributes,
  InferCreationAttributes,
  Model,
} from "sequelize";
import { Config } from "../configs/config.js";

export class User extends Model<
  InferAttributes<User>,
  InferCreationAttributes<User>
> {
  // Unique integer auto-generated by the db
  declare id: CreationOptional<number>;
  // Organisation-issued email address
  // Email not used as primary key to mask it from public urls
  declare email: string;
  // Hashed password
  declare password: string;
}

export const init = sequelize =>
  User.init(
    {
      id: {
        type: DataTypes.INTEGER,
        autoIncrement: true,
        primaryKey: true,
      },
      email: {
        type: DataTypes.STRING,
        allowNull: false,
        unique: {
          name: "EmailUniqueConstraintError",
          msg: "An account with this email already exists",
        },
        validate: {
          is: {
            args: [Config.ORG_EMAIL_REGEX],
            msg: "Email used is not university-issued",
          },
        },
      },
      password: {
        type: DataTypes.STRING,
        allowNull: false,
      },
    },
    { sequelize }
  );
