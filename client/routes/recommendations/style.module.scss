.container {
  padding: 1rem;
  display: grid;
  grid-template-columns: 1fr auto;
  grid-template-rows: auto 1fr;
  grid-template-areas:
    "header filter"
    "main   filter";
  grid-gap: 1rem;
  height: calc(100vh - 3rem);
  overflow-y: scroll;
  align-items: flex-start;

  .header {
    grid-area: header;
    display: grid;
    grid-template-columns: auto auto 1fr;
    grid-template-rows: auto auto;

    h3 {
      grid-area: 1 / 1 / 2 / 4;
    }

    h4 {
      grid-area: 2 / 1 / 3 / 2;
    }

    :global(.cds--popover-container) {
      grid-area: 2 / 2 / 3 / 3;
      align-self: center;
      margin-left: 10px;
    }
  }

  main {
    grid-area: main;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-auto-rows: min-content;
    grid-gap: 0.8rem;
    height: 100%;
    max-width: 1200px;

    .nobodyToRecommendContainer {
      grid-area: 1 / 1 / 2 / -1;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      height: calc(100vh - 3rem);
      text-align: center;

      svg {
        width: 120px;
        height: 120px;
        margin-bottom: 10px;
      }
    }
  }

  aside {
    grid-area: filter;
    position: sticky;
    top: 0;

    :global(.cds--tile) {
      height: 100%;
      display: grid;
      grid-template-rows: auto 1fr auto;
      grid-gap: 1rem;
      align-items: flex-start;
    }

    .filterHeader {
      display: flex;
      align-items: center;
      gap: 0.8rem;
    }

    :global(.cds--btn-set) {
      width: 50%;
    }
  }

  .filterControls {
    display: grid;
    grid-gap: 1rem;
  }

  .recommendedUser {
    display: grid;
    align-items: flex-start;
    grid-template-columns: 1fr auto;
    grid-template-rows: auto 1fr auto auto;
    grid-template-areas:
      "img  sim"
      "name name"
      "info info"
      "mut  mut"
      "btn  btn";

    .squareImage {
      position: relative;
      grid-area: 1 / 1 / 2 / 3;
      width: calc(100% + 2rem - 2px);
      height: auto;
      transform: translate(calc(-1rem + 1px), calc(-1rem + 1px));
    }

    .squareImage::after {
      content: "";
      display: block;
      padding-bottom: 100%;
    }

    .squareImage img {
      position: absolute;
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: 50% 50%;
    }

    & > span {
      grid-area: 1 / 1 / 2 / 3;
      background: linear-gradient(to bottom, rgba(0, 0, 0, 0.7) 0%, transparent 40%);
      width: calc(100% + 2rem - 2px);
      height: calc(100% + 2rem - 2px);
      transform: translate(calc(-1rem + 1px), calc(-1rem + 1px));
      z-index: 2;
    }

    h4 {
      grid-area: name;
      font-weight: 500;
    }

    p {
      grid-area: info;
      font-size: small;
    }

    .recommendedUserMutuals {
      grid-area: mut;
      display: flex;
      margin-bottom: 0.8rem;
      align-items: center;

      img {
        height: 25px;
        width: 25px;
        border-radius: 100%;
        object-fit: cover;
        object-position: 50% 50%;
      }

      img:not(:first-child) {
        margin-left: -10px;
      }
    }

    button {
      grid-area: btn;
      width: auto;
      justify-content: flex-start;

      span {
        white-space: nowrap;
      }
    }

    :global(.cds--tag) {
      grid-area: sim;
      z-index: 2;
    }
  }

  .mobileFilter {
    display: none;
  }
}

@media only screen and (max-width: 1300px) {
  .container {
    grid-template-columns: 1fr;
    grid-template-rows: auto auto 1fr;
    grid-template-areas:
    "header"
    "."
    "main";

    main {
      grid-template-columns: repeat(5, 1fr);
    }

    aside {
      display: none;
    }

    .mobileFilter {
      display: flex;
    }
  }
}

@media only screen and (max-width: 1100px) {
  .container {
    main {
      grid-template-columns: repeat(4, 1fr);
    }
  }
}

@media only screen and (max-width: 800px) {
  .container {
    main {
      grid-template-columns: repeat(3, 1fr);

      .recommendedUser {
        button > span {
          display: none;
        }
      }
    }
  }
}

@media only screen and (max-width: 550px) {
  .container {
    main {
      grid-template-columns: repeat(2, 1fr);
    }
  }
}